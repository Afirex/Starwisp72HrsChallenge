{"version":3,"sources":["components/Post.jsx","components/Pagination.js","components/body.jsx","components/form.jsx","App.js","index.js"],"names":["Posts","posts","loading","fetchpost","useState","visible","setvisible","uid","userinfo","dataset","uni_name","Registration_date","Expiry_date","imgurl","no_of_students","email","web_url","contact_no","updatedata","setUpdate","postDelete","evt","id","target","name","axios","url","method","data","then","response","catch","console","log","handleClick","value","set","handleChange","prev","submitUpdate","alert","ChangeHandler","className","map","post","type","onChange","slice","onClick","Pagination","postperpage","totalPost","paginate","key","href","Body","props","setPosts","setloading","currentPage","setcurrentPage","a","get","res","useEffect","indexOfLastPost","indexOfFirstPost","currentPost","pageNumber","curr","visibleView","setvisibleView","adddata","setlogout","Post","length","Form","loggedin","setstate","userid","password","handleSubmit","msg","preventDefault","prevval","onSubmit","aria-describedby","placeholder","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.18b8994d.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst Posts = ({ posts, loading, fetchpost }) => {\r\n\r\n    const [visible, setvisible] = useState(false);\r\n\r\n    const [userinfo, dataset] = useState(\r\n        {\r\n            uid: \"\",\r\n        });\r\n\r\n    const [updatedata, setUpdate] = useState({\r\n        uni_name: \"\",\r\n        Registration_date: \"\",\r\n        Expiry_date: \"\",\r\n        imgurl: \"\",\r\n        no_of_students: \"\",\r\n        email: \"\",\r\n        web_url: \"\",\r\n        contact_no: \"\"\r\n    });\r\n\r\n    if (loading) { return <h2> fetching</h2> }\r\n\r\n    function postDelete(evt) {\r\n        const id = evt.target.name;\r\n        // console.log(id);\r\n        dataset({ uid: id });\r\n        axios({\r\n            url: '/delete',\r\n            method: 'POST',\r\n            data: { uid: id }\r\n        })\r\n            .then((response) => {\r\n                fetchpost();\r\n            })\r\n            .catch(() => { console.log('Connection not done'); });;\r\n    }\r\n\r\n\r\n    function set(name) { dataset(() => ({ uid: name })); };\r\n    function handleClick(evt) {\r\n        const { name, value } = evt.target;\r\n        setvisible(!visible);\r\n        set(name);\r\n    }\r\n    function rends() {\r\n        return <div className='list-group mb-4'>\r\n            <h4 className='colortits'>College name | | Registration_date | | Expiry_date | | no_of_students | | email | | web_url | | contact_no | |\r\n        </h4>\r\n            {posts.map(post => (\r\n                <div className=\"flex\">\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"uni_name\"\r\n                        onChange={ChangeHandler} value={post.uni_name}>\r\n                    </input>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"Registration_date\"\r\n                        onChange={ChangeHandler} value={post.Registration_date.slice(0, 10) || \"\"}>\r\n                    </input>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"userid\"\r\n                        onChange={ChangeHandler} value={post.Expiry_date.slice(0, 10)}>\r\n                    </input>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"userid\" value={post.no_of_students}\r\n                        onChange={ChangeHandler}>\r\n                    </input>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"userid\" value={post.email}\r\n                        onChange={ChangeHandler}>\r\n                    </input>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"userid\" value={post.web_url}\r\n                        onChange={ChangeHandler}>\r\n                    </input>\r\n                    <input type=\"text\" className=\"form-control\"\r\n                        name=\"userid\" value={post.contact_no}\r\n                        onChange={ChangeHandler}>\r\n                    </input>\r\n                    <button className=\"btn\" name={post.uid} onClick={handleClick} >Edit</button>\r\n                    <button className=\"btn\" name={post.uid} onClick={postDelete}>Delete</button>\r\n                </div>\r\n            ))}\r\n        </div>;\r\n    }\r\n\r\n    function handleChange(evt) {\r\n        const { name, value } = evt.target;\r\n        setUpdate((prev) => ({ ...prev, [name]: value }));\r\n        //console.log(updatedata);\r\n    }\r\n    function submitUpdate(evt) {\r\n        const { name } = evt.target;\r\n        axios({\r\n            url: '/update',\r\n            method: 'POST',\r\n            data: { uid: name, data: updatedata }\r\n        })\r\n            .then((response) => {\r\n                alert('request sent'); fetchpost();\r\n            })\r\n            .catch(() => { console.log('Connection not done'); });;\r\n        setvisible(!visible);\r\n    }\r\n    function Edit() {\r\n        return <div className='box2'>\r\n            <h4 className=\"colortits\">only Fill columns to be updated, Rest Leave empty</h4><br />\r\n            <label>College Name:<input type=\"text\" className=\"form-control pads\" name=\"uni_name\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>Registration_date<input type=\"text\" className=\"form-control\" name=\"Registration_date\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>Expiry_date<input type=\"text\" className=\"form-control\" name=\"Expiry_date\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>no_of_students<input type=\"text\" className=\"form-control\" name=\"no_of_students\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>email<input type=\"text\" className=\"form-control\" name=\"email\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>web_url<input type=\"text\" className=\"form-control\" name=\"web_url\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>contact_no<input type=\"text\" className=\"form-control\" name=\"contact_no\" onChange={handleChange}>\r\n            </input></label>\r\n            <button className=\"btn\" name={userinfo.uid} onClick={submitUpdate}>SEND UPDATE REQUEST</button></div>;\r\n    }\r\n    function ChangeHandler() { }\r\n    return <div><div className=\"flex\">\r\n        {rends()}</div>\r\n        {visible ? Edit() : null}\r\n    </div>;\r\n}\r\n\r\n\r\n\r\n\r\nexport default Posts;","import React from \"react\";\r\n\r\n\r\nconst Pagination = ({ postperpage, totalPost, paginate }) => {\r\n\r\n    return <div>\r\n        <nav> <ul className=\"pagination\">\r\n            <li key={1} className=\"page-item\">\r\n                <a onClick={() => paginate(2)} className=\"page-link\"> prev </a>\r\n            </li>\r\n            <li key={2} className=\"page-item\">\r\n                <a onClick={() => paginate(1)} className=\"page-link\"> next </a>\r\n            </li>\r\n        </ul></nav>\r\n        <a href=\"/\" className=\"btn\">Update Connection</a>\r\n    </div>\r\n\r\n}\r\n\r\nexport default Pagination;","import React, { useState, useEffect } from \"react\";\r\nimport axios from 'axios';\r\nimport Post from \"./Post\";\r\nimport Pagination from \"./Pagination\";\r\n\r\nfunction Body(props) {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [loading, setloading] = useState(false);\r\n    const [currentPage, setcurrentPage] = useState(1);\r\n    const [postperpage] = useState(3);\r\n\r\n    const fetchpost = async () => {\r\n        setloading(true);\r\n        const res = await axios.get('/university');\r\n        //console.log(res.data);\r\n        setPosts(res.data);\r\n        setloading(false);\r\n    }\r\n    useEffect(() => {\r\n        fetchpost();\r\n    }, []);\r\n\r\n\r\n\r\n    const indexOfLastPost = currentPage * postperpage;\r\n    const indexOfFirstPost = indexOfLastPost - postperpage;\r\n    const currentPost = posts.slice(indexOfFirstPost, indexOfLastPost);\r\n    //console.log(posts.slice(indexOfFirstPost, indexOfLastPost));\r\n    //console.log(indexOfFirstPost + \" \" + indexOfLastPost + \" --- \" + currentPage);\r\n    function paginate(pageNumber) {\r\n        const curr = currentPage;\r\n        if (pageNumber === 1) { setcurrentPage(curr + 1); }\r\n        else if (curr > 1) {\r\n            setcurrentPage(curr - 1);\r\n        }\r\n    }\r\n    const [visible, setvisible] = useState(false);\r\n    const [visibleView, setvisibleView] = useState(false);\r\n    function rends() {\r\n        // console.log('inside rends');\r\n        return <div><Post posts={currentPost} loading={loading} fetchpost={fetchpost} />\r\n            <Pagination postperpage={postperpage} totalPost={posts.length} paginate={paginate} />\r\n        </div>;\r\n    }\r\n    const [adddata, setUpdate] = useState({\r\n        uni_name: \"\",\r\n        Registration_date: \"\",\r\n        Expiry_date: \"\",\r\n        imgurl: \"\",\r\n        no_of_students: \"\",\r\n        email: \"\",\r\n        web_url: \"\",\r\n        contact_no: \"\"\r\n    });\r\n    function handleChange(evt) {\r\n        const { name, value } = evt.target;\r\n        setUpdate((prev) => ({ ...prev, [name]: value }));\r\n        // console.log(adddata);\r\n    }\r\n    function submitUpdate(evt) {\r\n        axios({\r\n            url: '/add',\r\n            method: 'POST',\r\n            data: { adddata }\r\n        })\r\n            .then((response) => {\r\n                alert('request sent'); fetchpost(); setUpdate({\r\n                    uni_name: \"\",\r\n                    Registration_date: \"\",\r\n                    Expiry_date: \"\",\r\n                    imgurl: \"\",\r\n                    no_of_students: \"\",\r\n                    email: \"\",\r\n                    web_url: \"\",\r\n                    contact_no: \"\"\r\n                });\r\n            })\r\n            .catch(() => { alert(\"server Refused\"); console.log('Connection not done'); });;\r\n        setvisible(!visible);\r\n    }\r\n    function add() {\r\n        return <div className='box3'>\r\n            <h4 className=\"colortits\">Add Data</h4><br />\r\n            <label>College Name:<input type=\"text\" className=\"form-control pads\" name=\"uni_name\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>Registration_date<input type=\"text\" className=\"form-control\" name=\"Registration_date\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>Expiry_date<input type=\"text\" className=\"form-control\" name=\"Expiry_date\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>img_url<input type=\"text\" className=\"form-control\" name=\"imgurl\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>no_of_students<input type=\"text\" className=\"form-control\" name=\"no_of_students\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>email<input type=\"text\" className=\"form-control\" name=\"email\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>web_url<input type=\"text\" className=\"form-control\" name=\"web_url\" onChange={handleChange}>\r\n            </input></label>\r\n            <label>contact_no<input type=\"text\" className=\"form-control\" name=\"contact_no\" onChange={handleChange}>\r\n            </input></label>\r\n            <br /><button className=\"btn\" onClick={submitUpdate}>Send Addition</button></div>;\r\n\r\n    }\r\n    return <div className=\"box2\">\r\n        <nav className=\"navbar navbar-inverse navbar-fixed-top\">\r\n            <div className=\"container-fluid\">\r\n                <div className=\"navbar-header\">\r\n                    <a className=\"navbar-brand\" href=\"http://lifeisgta.ga\" target=\"blank\">Starwisp Afirex   </a>\r\n                </div>\r\n                <ul className=\"nav navbar-nav\">\r\n                    <li onClick={() => setvisible(!visible)}><a>Add</a></li>\r\n                    <li onClick={() => setvisibleView(!visibleView)}><a>View</a></li>\r\n                </ul>\r\n                <ul>\r\n                    <h5 className=\"logout\"><a href=\"/\" onClick={props.setlogout}>logout</a></h5>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n        {visible ? add() : null}\r\n        {visibleView ? rends() :\r\n            <footer>Click View to view info</footer>}\r\n    </div>;\r\n}\r\n\r\nexport default Body;\r\n","import React, { useState } from \"react\";\r\nimport Body from './body';\r\nimport axios from 'axios';\r\nfunction Form() {\r\n    const [loggedin, setstate] = useState(false);\r\n    // true for debugging\r\n    const [userinfo, dataset] = useState(\r\n        {\r\n            userid: \"\",\r\n            password: \"\"\r\n        });\r\n    axios({\r\n        url: '/save',\r\n        method: 'GET'\r\n    })\r\n        .then((response) => {\r\n            console.log(\"react: \" + response.data.msg);\r\n            if (response.data.msg === true) {\r\n                setstate(true);\r\n            }\r\n        })\r\n        .catch(() => { console.log('Connection not done'); });;\r\n\r\n    function handleSubmit(evt) {\r\n        //  console.log(userinfo.userid + \" || \" + userinfo.password);\r\n\r\n        axios({\r\n            url: '/save',\r\n            method: 'POST',\r\n            data: userinfo\r\n        })\r\n            .then((response) => {\r\n                //console.log(response.data.msg);\r\n                if (response.data.msg === 'found') {\r\n                    setstate(true);\r\n                }\r\n                else {\r\n                    alert(\"USER NOT FOUND\");\r\n                }\r\n            })\r\n            .catch(() => { console.log('Connection not done'); });;\r\n\r\n        evt.preventDefault();\r\n    }\r\n    function ChangeHandler(evt) {\r\n        const { name, value } = evt.target;\r\n        dataset((prevval) => ({ ...prevval, [name]: value }));\r\n        //console.log(userinfo);\r\n    }\r\n\r\n    function form() {\r\n        return <div className=\"box\"><div className=\"box3 logo\">Starwisp Challenge</div><form onSubmit={handleSubmit}>\r\n            <div className=\"form-group color\">\r\n                <label className=\"colortits\">User ID</label>\r\n                <input type=\"text\" className=\"form-control\" id=\"userid\" aria-describedby=\"emailHelp\"\r\n                    name=\"userid\" value={\"\" || userinfo.userid} onChange={ChangeHandler} placeholder=\"Enter User ID\">\r\n                </input>\r\n                <small id=\"emailHelp\" className=\"form-text text-muted\">We'll never share your ID with anyone else.</small>\r\n            </div>\r\n            <div className=\"form-group\">\r\n                <label className=\"colortits\">Password</label>\r\n                <input type=\"password\" name=\"password\" value={\"\" || userinfo.password} onChange={ChangeHandler} className=\"form-control\" id=\"password\" placeholder=\"Password\">\r\n                </input></div>\r\n            <button type=\"submit\" className=\"btn btn-primary\">Submit</button>\r\n        </form></div>;\r\n    }\r\n    function setlogout() {\r\n        setstate(!loggedin);\r\n        axios({\r\n            url: '/logout',\r\n            method: 'POST',\r\n            data: false\r\n        })\r\n            .then((response) => {\r\n            })\r\n            .catch(() => { console.log('Connection not done'); });;\r\n        console.log(\"logging out\");\r\n    }\r\n    function rend() {\r\n\r\n        return loggedin === true ? <Body setlogout={setlogout} /> : form();\r\n    }\r\n\r\n    return <div>\r\n        {rend()}\r\n    </div>\r\n\r\n}\r\n\r\n\r\nexport default Form;","import React from 'react';\nimport './App.css';\nimport Form from \"./components/form\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Form />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />\n  ,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}